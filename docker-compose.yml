version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:2 docker 9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    restart: always

  postgres:
    image: 'postgres:13.1-alpine'
    container_name: postgres
    depends_on:
      - zookeeper
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres

  eureka-server:
    container_name: eureka-server
    image: eureka-server
    build:
      context: ./api/eureka-server
      dockerfile: Dockerfile
    depends_on:
      - postgres
    ports:
      - "8761:8761"
    restart: always

  admin-server:
    container_name: admin-server
    image: admin-server
    build:
      context: ./api/admin
      dockerfile: Dockerfile
    depends_on:
      - eureka-server
    ports:
      - "9390:9390"
    restart: always

  customer-api:
    container_name: customer-api
    image: customer-api
    build:
      context: ./api/customer
      dockerfile: Dockerfile
    depends_on:
      - eureka-server
    links:
      - eureka-server
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
      - EUREKA_ClIENT_SERVICE_URL_DEFAULT_ZONE=http://eureka-server:8761/eureka/
      - SPRING_BOOT_ADMIN_CLIENT_URL=http://admin-server:9390/
      - SPRING_BOOT_ADMIN_CLIENT_INSTANCE_SERVICE_URL=http://customer-api:8083
    ports:
      - "8083:8083"
    restart: always

  product-api:
    container_name: product-api
    image: product-api
    build:
      context: ./api/product
      dockerfile: Dockerfile
    depends_on:
      - eureka-server
    links:
      - eureka-server
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
      - EUREKA_ClIENT_SERVICE_URL_DEFAULT_ZONE=http://eureka-server:8761/eureka/
      - SPRING_BOOT_ADMIN_CLIENT_URL=http://admin-server:9390/
      - SPRING_BOOT_ADMIN_CLIENT_INSTANCE_SERVICE_URL=http://product-api:8082
    ports:
      - "8082:8082"
    restart: always

  shop-cart-api:
    container_name: shop-cart-api
    image: shop-cart-api
    build:
      context: ./api/shopCart
      dockerfile: Dockerfile
    depends_on:
      - eureka-server
    links:
      - eureka-server
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/postgres
      - EUREKA_ClIENT_SERVICE_URL_DEFAULT_ZONE=http://eureka-server:8761/eureka/
      - SPRING_BOOT_ADMIN_CLIENT_URL=http://admin-server:9390/
      - SPRING_BOOT_ADMIN_CLIENT_INSTANCE_SERVICE_URL=http://shop-cart-api:8081
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
    ports:
      - "8081:8081"
    restart: always

  shop-validator:
    container_name: shop-validator
    image: shop-validator
    build:
      context: ./api/shopValidator
      dockerfile: Dockerfile
    depends_on:
      - eureka-server
    links:
      - eureka-server
    environment:
      - EUREKA_ClIENT_SERVICE_URL_DEFAULT_ZONE=http://eureka-server:8761/eureka/
      - SPRING_BOOT_ADMIN_CLIENT_URL=http://admin-server:9390/
      - SPRING_BOOT_ADMIN_CLIENT_INSTANCE_SERVICE_URL=http://shop-validator:8084
      - SPRING_KAFKA_BOOTSTRAP-SERVERS=kafka:9092
    ports:
      - "8084:8084"
    restart: always

volumes:
  db:
    driver: local

